/*public class Shapes {
	Circle circle;
	Rectangle rectangle;
	Button rectButton;
	Button circleButton;
	final Group group = new Group(circle);(createInstructions(), circle);
	final Scene scene = new Scene(group, 600, 400, Color.CORNSILK);
    stage.setScene(scene);
    stage.show();
	
	
	rectButton = new Button ();
	rectButton.setText("Rectangle");

	circleButton = new Button();
	circleButton.setText("Circle");*/

	package MillersvillePaint;

	import javafx.event.ActionEvent;
import javafx.animation.TranslateTransition;
import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Group;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.LineTo;
import javafx.scene.shape.MoveTo;
import javafx.scene.shape.Path;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.util.Duration;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;


	public class Main extends Application {

		Button rectButton;
		Button circleButton;
		Rectangle rectangle;
		Circle circle;

		public static void main(String[] args) {
			Application.launch(args);
		}

		@Override
		public void start(Stage primaryStage) throws Exception {
			primaryStage.setTitle("Millersville Paint");
			BorderPane border = new BorderPane();
			Scene scene = new Scene(border);
			final Group group = new Group(circle);/*(createInstructions(), circle);*/
			GridPane gridPane = new GridPane();


			//final Rectangle r = createRectangle();
			//final Circle c = createCircle();
			HBox hbox = addHbox(gridPane);
			border.setTop(addVBox());
			border.setCenter(addVBox());
			border.setRight(addFlowPane());
			border.setLeft(hbox);



			//rectButton = new Button ();
			//rectButton.setText("Rectangle");

			//circleButton = new Button();
			//circleButton.setText("Circle");


	/*
			rectButton.setOnAction(new EventHandler<ActionEvent>(){
				public void handle (ActionEvent event){	
					Rectangle r = new Rectangle(60, 30);
					r.setFill(Color.BLUE); 
					r.setX(200);
					r.setY(200);
					gridPane.getChildren().add(r);



				}

			});
	*/
	/*		circleButton.setOnAction(new EventHandler<ActionEvent>(){
				public void handle (ActionEvent event){	
					Circle c = new Circle(30);
					c.setFill(Color.BLUE); 
					root.getChildren().add(c);
					c.centerXProperty();
					c.setCenterX(500);
					c.setCenterY(400);

				}

			});
	*/

			rectButton.setLayoutX(200);
			rectButton.setLayoutY(200);
			circleButton.setLayoutX(700);
			circleButton.setLayoutY(700);
			//StackPane.setMargin(circleButton, new Insets(100, 100, 0, 0));
			//StackPane.setMargin(rectButton, new Insets(300, 300, 0, 0));
			
			Movement setShape = new Movement(circle, rectangle, group, scene);



			primaryStage.setScene(scene);
			primaryStage.show();
		}   



		private Node addVBox() {
			// TODO Auto-generated method stub
			return null;
		}

		private Node addFlowPane() {
			// TODO Auto-generated method stub
			return null;
		}

		private void addGridPane(GridPane gridPane) {
			gridPane.setHgap(10);
			gridPane.setVgap(10);
			gridPane.setPadding(new Insets(0, 10, 0, 10));
			
			
		}

/*		private Rectangle createRectangle(){
			final Rectangle r = new Rectangle (60, 30);
			r.setFill(Color.BLACK);
			return r;
	}

		private Circle createCircle(){
			final Circle c = new Circle (30);
			c.setFill(Color.BISQUE);
			return c;
		
	}*/

		private HBox addHbox(GridPane gridPane){
			HBox hbox = new HBox();
			hbox.setPadding(new Insets(15, 12, 15, 12));
			hbox.setSpacing(10);
			hbox.setStyle("-fx-background-color: #336699");

			rectButton = new Button ();
			rectButton.setText("Rectangle");

			circleButton = new Button();
			circleButton.setText("Circle");

			rectButton.setOnAction(new EventHandler<ActionEvent>(){
				public void handle (ActionEvent event){	
					Rectangle r = new Rectangle(60, 30);
					r.setFill(Color.BLUE); 
					r.setX(200);
					r.setY(200);
					gridPane.getChildren().add(r);                
				}

			});

			circleButton.setOnAction(new EventHandler<ActionEvent>(){
				public void handle (ActionEvent event){	
					Circle c = new Circle(30);
					c.setFill(Color.BLUE); 
					gridPane.getChildren().add(c);
					c.centerXProperty();
					c.setCenterX(500);
					c.setCenterY(400);                    
				}

			});


			hbox.getChildren().addAll(circleButton, rectButton);
			return hbox;	

		}
	
	
	  public Circle createCircle() {
		    final Circle circle = new Circle(200, 150, 50, Color.BLUEVIOLET);
		    circle.setOpacity(0.7);
		    return circle;
		  }
	  
	  public Rectangle createRectangle(){
		  final Rectangle rectangle = new Rectangle(60, 30);
		  rectangle.setFill(Color.BLACK);
		  return rectangle;
	  }
	  
/*	  Movement setShape = new Movement(circle, rectangle, group, scene);*/
	  
	  
		  
	  

}
